# -*- coding: utf-8 -*-
"""cps_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AOHFEivN41WPR4iN2pTpbZU5NFonh8X8
"""

from google.colab import drive
import pandas as pd
drive.mount('/content/drive')

train_data = pd.read_csv("/content/drive/My Drive/TrainingData.txt", header=None)

test_data = pd.read_csv("/content/drive/My Drive/TestingData.txt", header=None)

y_train = train_data[24].tolist() # 24th column is the labels

from sklearn import svm

from sklearn.svm import SVC

from sklearn.preprocessing import MinMaxScaler

x_train = train_data.drop(24,axis=1) # drop the label from training set

x_train= x_train.values.tolist() #since svm takes input in the form of [[],[]] convert x_train to list

scale = MinMaxScaler() # preprocessing

x_train = scale.fit_transform(x_train) 

print(x_train[:1])

clf = svm.SVC(kernel='linear')  
clf.fit(x_train,y_train)

x_test = test_data.values.tolist()



x_test = scale.transform(x_test) 

print(x_test[:1])

pred = clf.predict(x_test) # predict test labels

print(pred)

test_data['label'] = list(pred)

test_data.to_csv('/content/drive/My Drive/test_data_labelled.txt', index = False, header = False, index_label = False)

# This part is only for measuring accuracy by splitting the training data by 80% training 20% testing

from sklearn.model_selection import train_test_split

from sklearn import metrics

x_train_acc, x_test_acc, y_train_acc, y_test_acc = train_test_split(x_train, y_train, test_size=0.2, random_state=0) #split data to 80% training 20% testing

tmp = svm.SVC()

tmp.fit(x_train_acc,y_train_acc)

tmp_pred = clf.predict(x_test_acc)

print("Accuracy:",metrics.accuracy_score(y_test_acc, tmp_pred)) # measure accuracy using 20% test data labels against predicted labels